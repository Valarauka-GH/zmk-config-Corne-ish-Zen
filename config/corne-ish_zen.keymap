/*
*
* Copyright (c) 2021 Darryl deHaan
* SPDX-License-Identifier: MIT
*
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define NUMBER  1
#define SYMBOL  2
#define ADJUST  3

/ {
        keymap {
                compatible = "zmk,keymap";

                base_layer {
                        label = "BASE";
// -----------------------------------------------------------------------------------------
// | ESC  |  Q  |  W  |  F  |  P  |  B  |    |  J  |  L   |  U  |  Y  |  ;  |   \   |
// | BKSP |  A  |  R  |  S  |  T  |  G  |    |  M  |  N   |  E  |  I  |  O  |   '   |
// | CTRL |  Z  |  X  |  C  |  D  |  V  |    |  K  |  H   |  ,  |  .  |  /  | ALT/` |
//          | GUI/DEL | SHIFT/SPC | NUM |    | SYM | RET  | TAB |
                        bindings = <
   &kp ESC   &kp Q &kp W &kp F &kp P &kp B   &kp J &kp L  &kp U     &kp Y   &kp SEMI &kp BSLH
   &kp BSPC  &kp A &kp R &kp S &kp T &kp G   &kp M &kp N  &kp E     &kp I   &kp O    &kp SQT
   &kp LCTRL &kp Z &kp X &kp C &kp D &kp V   &kp K &kp H  &kp COMMA &kp DOT &kp FSLH &mt LALT GRAVE
   &mt LGUI DEL &mt LSHFT SPACE &mo NUMBER   &mo SYMBOL &kp RET &kp TAB
                        >;
                };

                number_layer {
                        label = "NUMBER";
// -----------------------------------------------------------------------------------------
// |      | F1  | F2  | F3  | F4  | F5  |   | F6  | F7  | F8  | F9  | F10 |      |
// |      |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |      |
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
//                    |     |     |     |   |     |     |     |
                        bindings = <
   &trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5     &kp F6  &kp F7  &kp F8  &kp F9  &kp F10 &trans
   &trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5     &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &trans
   &trans  &trans  &trans  &trans  &trans  &trans     &trans  &trans  &trans  &trans  &trans  &trans
                           &trans  &trans  &trans     &trans  &trans  &trans
                        >;
                };

                symbol_layer {
                        label = "SYMBOL";
// -----------------------------------------------------------------------------------------
// |      |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |      |
// |      |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// |      |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    |     |     |     |   |     |     |     |
                        bindings = <
   &trans    &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &trans
   &trans    &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
   &trans    &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                    	     &trans   &trans   &trans      &trans    &trans    &trans
                        >;
                };

                adjust_layer {
                        label = "ADJUST";
// -----------------------------------------------------------------------------------------
// | RESET|     |     |     |     |     |   |     |     |     |     |     |      |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   |     |     |     |     |     |      |
// | CAPS |     |     |     |     |     |   |     |     |     |     |     |      |
//                    |     |     |     |   |     |     |     |
                        bindings = <
   &reset     &trans       &trans       &trans       &trans       &trans         &trans  &trans  &trans  &trans  &trans  &trans
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &trans  &trans  &trans  &trans  &trans  &trans
   &kp CAPS   &trans       &trans       &trans       &trans       &trans         &trans  &trans  &trans  &trans  &trans  &trans
                          	        &trans       &trans       &trans         &trans  &trans  &trans
                        >;
                };

        };
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <NUMBER SYMBOL>;
            then-layer = <ADJUST>;
        };
    };
};